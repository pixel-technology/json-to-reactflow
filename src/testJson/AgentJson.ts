import { AgentConfig } from "@/types/agent";

export const agentJson: AgentConfig = {
  _id: "684a702ed041112e9dc3e1cd",
  id: "9c92eab88cd04c608cb3d750415ff457",
  title: "Contentstack Logger",
  description:
    "Triggered via HTTP. Creates and publishes a log (entry or asset) via a helper agent. Also classifies the event by ensuring the proper taxonomy and term exist, enabling structured categorization in Contentstack.",
  active: false,
  project_id: "b4c5248357874643aedca7a32ab1c89a",
  abilities: [
    {
      id: "15ee0a723b3a46399819117ee7e5230b",
      title: "Contentstack Object Creator",
      type: "agent",
      fullAgentData: {
        _id: "6864d22c479742dcfb690b07",
        id: "15ee0a723b3a46399819117ee7e5230b",
        title: "Contentstack Object Creator",
        description:
          "Creates and publishes a Contentstack entry or asset based on input type and data. Acts as a reusable sub-agent for logging or event tracking purposes.",
        active: true,
        project_id: "b4c5248357874643aedca7a32ab1c89a",
        abilities: [
          {
            id: "090b81721ccc48af9a63bad94d5aace9",
            title: "Create an Entry",
            type: "action",
            configured_action: {
              id: "090b81721ccc48af9a63bad94d5aace9",
              origin_id: "090b81721ccc48af9a63bad94d5aace9",
              title: "Create an Entry",
              description: "This action creates a new entry in a stack.",
              type: "action",
              auth: "cd25eb9fe1f146d586d6832bdad24c07",
              connector_id: "9230134456674e95a4d569aaeebf72de",
              input_schema:
                '{\n  "type": "object",\n  "required": [\n    "stack_api_key",\n    "content_type_name",\n    "entry_data"\n  ],\n  "properties": {\n    "stack_api_key": {\n      "title": "Select Stack",\n      "type": "string",\n      "description": "Select a stack to create an entry.",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_stack_api_keys_v5",\n        "authtoken": true\n      }\n    },\n    "branch": {\n      "title": "Select Branch",\n      "type": "string",\n      "default": "{(main||main)}",\n      "description": "Select a branch from your stack.",\n      "lookup": {\n        "id": "get_branches_v5",\n        "deps": [\n          "stack_api_key"\n        ]\n      },\n      "show": true,\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "branch.uid"\n        ]\n      }\n    },\n    "content_type_name": {\n      "title": "Select Content Type",\n      "type": "string",\n      "description": "Select a content type to create an entry.",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_content_types_v5",\n        "searchable": true,\n        "deps": [\n          "stack_api_key"\n        ],\n        "optional_deps": [\n          "branch"\n        ]\n      },\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "content_type.uid"\n        ]\n      }\n    },\n    "entry_data": {\n      "title": "Entry Data",\n      "type": "string",\n      "description": "Enter the entry data in JSON format.",\n      "format": "textarea",\n      "minLength": 3,\n      "dynamicSchema": {\n        "lookup": "dynamic_schema_cs_entry_v4",\n        "deps": [\n          "stack_api_key",\n          "content_type_name"\n        ],\n        "optional_deps": [\n          "branch"\n        ]\n      }\n    },\n    "locale": {\n      "title": "Select Locale",\n      "type": "string",\n      "description": "Select a locale in which you want to create the entry.",\n      "lookup": {\n        "id": "get_locales_v5",\n        "deps": [\n          "stack_api_key"\n        ],\n        "optional_deps": [\n          "branch"\n        ],\n        "searchable": true\n      }\n    },\n    "include_branch": {\n      "title": "Include branch",\n      "type": "boolean"\n    }\n  }\n}',
              group_name: "contentstack",
              help: "https://www.contentstack.com/docs/developers/automation-hub-connectors/contentstack-management-entries-actions#create-an-entry",
              version: 1,
              published: true,
              category: "Entry",
              auth_scope: ["cm.entries.management:write"],
              plan_key: "",
              tool_input_schema:
                '{"type":"object","required":["stack_api_key","branch","content_type_name","entry_data","locale","include_branch"],"properties":{"stack_api_key":{"title":"Select Stack","type":"string","description":"Select a stack to create an entry.","default":"","minLength":3,"lookup":{"id":"get_stack_api_keys_v5","authtoken":true}},"branch":{"title":"Select Branch","type":"string","default":"{(main||main)}","description":"Select a branch from your stack.","lookup":{"id":"get_branches_v5","deps":["stack_api_key"]},"show":true,"likeliest_values":{"type":"key","value":["branch.uid"]}},"content_type_name":{"title":"Select Content Type","type":"string","description":"Select a content type to create an entry.","default":"","minLength":3,"lookup":{"id":"get_content_types_v5","searchable":true,"deps":["stack_api_key"],"optional_deps":["branch"]},"likeliest_values":{"type":"key","value":["content_type.uid"]}},"entry_data":{"title":"Entry Data","type":"string","description":"Enter the entry data in JSON format.","format":"textarea","minLength":3,"dynamicSchema":{"lookup":"dynamic_schema_cs_entry_v4","deps":["stack_api_key","content_type_name"],"optional_deps":["branch"]}},"locale":{"title":"Select Locale","type":"string","description":"Select a locale in which you want to create the entry.","lookup":{"id":"get_locales_v5","deps":["stack_api_key"],"optional_deps":["branch"],"searchable":true}},"include_branch":{"title":"Include branch","type":"boolean"}}}',
              input_data: "{}",
              name: "Create an Entry",
              connector_title: "Create an Entry",
              action_title: "Create an Entry",
              tool_title: "Create an Entry",
              tool_description: "This action creates a new entry in a stack.",
            },
          },
          {
            id: "fe9818c419d8496d98d0189bfed94fbf",
            title: "Create an Asset",
            type: "action",
            configured_action: {
              id: "fe9818c419d8496d98d0189bfed94fbf",
              origin_id: "fe9818c419d8496d98d0189bfed94fbf",
              title: "Create an Asset",
              description: "This action creates a new asset in a stack.",
              type: "action",
              auth: "cd25eb9fe1f146d586d6832bdad24c07",
              connector_id: "9230134456674e95a4d569aaeebf72de",
              input_schema:
                '{\n  "type": "object",\n  "required": [\n    "stack_api_key",\n    "key",\n    "body",\n    "title"\n  ],\n  "properties": {\n    "stack_api_key": {\n      "title": "Select Stack",\n      "type": "string",\n      "description": "Select a stack to create a new asset.",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_stack_api_keys_v5",\n        "authtoken": true\n      }\n    },\n    "branch": {\n      "title": "Select Branch",\n      "type": "string",\n      "default": "{(main||main)}",\n      "description": "Select a branch from your stack.",\n      "lookup": {\n        "id": "get_branches_v5",\n        "deps": [\n          "stack_api_key"\n        ]\n      }\n    },\n    "title": {\n      "title": "Asset Title",\n      "type": "string",\n      "description": "Specify a title for the asset.",\n      "minLength": 3\n    },\n    "key": {\n      "title": "File Name",\n      "type": "string",\n      "description": "Specify a file name for the asset.",\n      "minLength": 3\n    },\n    "body": {\n      "type": "string",\n      "title": "Input URL",\n      "description": "Specify an input URL to create an asset.",\n      "show": true,\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "url"\n        ]\n      }\n    },\n    "description": {\n      "title": "Asset Description",\n      "type": "string",\n      "description": "Specify a description for the asset.",\n      "minLength": 3\n    },\n    "folder_id": {\n      "title": "Select Folder",\n      "type": "string",\n      "description": "Select a destination folder for saving the created asset.",\n      "minLength": 1,\n      "lookup": {\n        "id": "get_folders_v5",\n        "deps": [\n          "stack_api_key"\n        ]\n      },\n      "show": false,\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "asset.uid"\n        ]\n      }\n    }\n  }\n}',
              group_name: "contentstack",
              help: "https://www.contentstack.com/docs/developers/automation-hub-connectors/contentstack-management-assets-actions#create-an-asset",
              version: 1,
              published: true,
              category: "Asset",
              auth_scope: ["cm.assets.management:write"],
              plan_key: "",
              tool_input_schema:
                '{"type":"object","required":["stack_api_key","branch","title","key","body","description","folder_id"],"properties":{"stack_api_key":{"title":"Select Stack","type":"string","description":"Select a stack to create a new asset.","default":"","minLength":3,"lookup":{"id":"get_stack_api_keys_v5","authtoken":true}},"branch":{"title":"Select Branch","type":"string","default":"{(main||main)}","description":"Select a branch from your stack.","lookup":{"id":"get_branches_v5","deps":["stack_api_key"]}},"title":{"title":"Asset Title","type":"string","description":"Specify a title for the asset.","minLength":3},"key":{"title":"File Name","type":"string","description":"Specify a file name for the asset.","minLength":3},"body":{"type":"string","title":"Input URL","description":"Specify an input URL to create an asset.","show":true,"likeliest_values":{"type":"key","value":["url"]}},"description":{"title":"Asset Description","type":"string","description":"Specify a description for the asset.","minLength":3},"folder_id":{"title":"Select Folder","type":"string","description":"Select a destination folder for saving the created asset.","minLength":1,"lookup":{"id":"get_folders_v5","deps":["stack_api_key"]},"show":false,"likeliest_values":{"type":"key","value":["asset.uid"]}}}}',
              input_data: "{}",
              name: "Create an Asset",
              connector_title: "Create an Asset",
              action_title: "Create an Asset",
              tool_title: "Create an Asset",
              tool_description: "This action creates a new asset in a stack.",
            },
          },
          {
            id: "684b53dd6d0747babae9420f9a434470",
            title: "Publish an Asset",
            type: "action",
            configured_action: {
              id: "684b53dd6d0747babae9420f9a434470",
              origin_id: "684b53dd6d0747babae9420f9a434470",
              title: "Publish an Asset",
              description: "This action publishes an asset in a stack.",
              type: "action",
              auth: "cd25eb9fe1f146d586d6832bdad24c07",
              connector_id: "9230134456674e95a4d569aaeebf72de",
              input_schema:
                '{\n  "type": "object",\n  "required": [\n    "stack_api_key",\n    "asset",\n    "environments"\n  ],\n  "properties": {\n    "stack_api_key": {\n      "title": "Select Stack",\n      "description": "Select a stack to publish the asset.",\n      "type": "string",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_stack_api_keys_v5",\n        "authtoken": true\n      }\n    },\n    "branch": {\n      "title": "Select Branch",\n      "type": "string",\n      "default": "{(main||main)}",\n      "description": "Select a branch from your stack.",\n      "lookup": {\n        "id": "get_branches_v5",\n        "deps": [\n          "stack_api_key"\n        ]\n      },\n      "show": true,\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "branch.uid"\n        ]\n      }\n    },\n    "asset": {\n      "title": "Select Asset",\n      "description": "Select an asset to publish.",\n      "type": "string",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_assets_v6",\n        "deps": [\n          "stack_api_key"\n        ],\n        "optional_deps": [\n          "branch"\n        ],\n        "nested": true\n      },\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "asset.uid"\n        ]\n      }\n    },\n    "environments": {\n      "title": "Select Environment(s)",\n      "description": "Select the environment(s) in which you want to publish the asset.",\n      "type": "string",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_environments_v4",\n        "deps": [\n          "stack_api_key"\n        ]\n      },\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "environment.uid"\n        ]\n      },\n      "multiSelect": true\n    },\n    "locales": {\n      "title": "Select Locale(s)",\n      "description": "Select the locale(s) in which you want to publish the asset.",\n      "type": "string",\n      "lookup": {\n        "id": "get_locales_v5",\n        "deps": [\n          "stack_api_key"\n        ],\n        "optional_deps": [\n          "branch"\n        ],\n        "searchable": true\n      },\n      "multiSelect": true\n    },\n    "scheduled_at": {\n      "title": "Publish Schedule",\n      "description": "Schedule the asset publish in ‘YYYY-MM-DD HH:MM:SS’ format.",\n      "type": "string"\n    }\n  }\n}',
              group_name: "contentstack",
              help: "https://www.contentstack.com/docs/developers/automation-hub-connectors/contentstack-management-assets-actions#publish-an-asset",
              version: 1,
              published: true,
              category: "Asset",
              auth_scope: ["cm.asset:publish"],
              plan_key: "",
              tool_input_schema:
                '{"type":"object","required":["stack_api_key","branch","asset","environments","locales","scheduled_at"],"properties":{"stack_api_key":{"title":"Select Stack","description":"Select a stack to publish the asset.","type":"string","default":"","minLength":3,"lookup":{"id":"get_stack_api_keys_v5","authtoken":true}},"branch":{"title":"Select Branch","type":"string","default":"{(main||main)}","description":"Select a branch from your stack.","lookup":{"id":"get_branches_v5","deps":["stack_api_key"]},"show":true,"likeliest_values":{"type":"key","value":["branch.uid"]}},"asset":{"title":"Select Asset","description":"Select an asset to publish.","type":"string","default":"","minLength":3,"lookup":{"id":"get_assets_v6","deps":["stack_api_key"],"optional_deps":["branch"],"nested":true},"likeliest_values":{"type":"key","value":["asset.uid"]}},"environments":{"title":"Select Environment(s)","description":"Select the environment(s) in which you want to publish the asset.","type":"string","default":"","minLength":3,"lookup":{"id":"get_environments_v4","deps":["stack_api_key"]},"likeliest_values":{"type":"key","value":["environment.uid"]},"multiSelect":true},"locales":{"title":"Select Locale(s)","description":"Select the locale(s) in which you want to publish the asset.","type":"string","lookup":{"id":"get_locales_v5","deps":["stack_api_key"],"optional_deps":["branch"],"searchable":true},"multiSelect":true},"scheduled_at":{"title":"Publish Schedule","description":"Schedule the asset publish in ‘YYYY-MM-DD HH:MM:SS’ format.","type":"string"}}}',
              input_data: "{}",
              name: "Publish an Asset",
              connector_title: "Publish an Asset",
              action_title: "Publish an Asset",
              tool_title: "Publish an Asset",
              tool_description: "This action publishes an asset in a stack.",
            },
          },
          {
            id: "8e5a65939957438da0dcc8123eefaa9c",
            title: "Publish an Entry",
            type: "action",
            configured_action: {
              id: "8e5a65939957438da0dcc8123eefaa9c",
              origin_id: "8e5a65939957438da0dcc8123eefaa9c",
              title: "Publish an Entry",
              description: "This action publishes a single entry in a stack.",
              type: "action",
              auth: "cd25eb9fe1f146d586d6832bdad24c07",
              connector_id: "9230134456674e95a4d569aaeebf72de",
              input_schema:
                '{\n  "type": "object",\n  "required": [\n    "stack_api_key",\n    "content_type_name",\n    "entry",\n    "environments",\n    "locales"\n  ],\n  "properties": {\n    "stack_api_key": {\n      "title": "Select Stack",\n      "description": "Select a stack to publish the entry.",\n      "type": "string",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_stack_api_keys_v5",\n        "authtoken": true\n      }\n    },\n    "branch": {\n      "title": "Select Branch",\n      "type": "string",\n      "description": "Select a branch from your stack.",\n      "default": "{(main||main)}",\n      "show": true,\n      "lookup": {\n        "id": "get_branches_v5",\n        "deps": [\n          "stack_api_key"\n        ]\n      },\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "branch.uid"\n        ]\n      }\n    },\n    "content_type_name": {\n      "title": "Select Content Type",\n      "description": "Select a content type to publish the entry.",\n      "type": "string",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_content_types_v5",\n        "searchable": true,\n        "deps": [\n          "stack_api_key"\n        ],\n        "optional_deps": [\n          "branch"\n        ]\n      },\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "content_type.uid"\n        ]\n      }\n    },\n    "entry": {\n      "title": "Select Entry",\n      "description": "Select an entry to publish.",\n      "type": "string",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_entries_v5",\n        "searchable": true,\n        "deps": [\n          "stack_api_key",\n          "content_type_name"\n        ],\n        "optional_deps": [\n          "branch"\n        ]\n      },\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "entry.uid"\n        ]\n      }\n    },\n    "locales": {\n      "title": "Select Locale(s)",\n      "description": "Select the locale(s) in which you want to publish the entry.",\n      "type": "string",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_locales_v5",\n        "deps": [\n          "stack_api_key"\n        ],\n        "optional_deps": [\n          "branch"\n        ],\n        "searchable": true\n      },\n      "multiSelect": true\n    },\n    "environments": {\n      "title": "Select Environment(s)",\n      "description": "Select the environment(s) in which you want to publish the entry.",\n      "type": "string",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_environments_v4",\n        "deps": [\n          "stack_api_key"\n        ]\n      },\n      "likeliest_values": {\n        "type": "key",\n        "value": [\n          "environment.uid"\n        ]\n      },\n      "multiSelect": true\n    },\n    "publish_with_reference": {\n      "title": "Nested Reference Publishing",\n      "type": "boolean",\n      "default": true\n    },\n    "scheduled_at": {\n      "title": "Publish Schedule",\n      "description": "Schedule the entry publish in ‘YYYY-MM-DD HH:MM:SS’ format.",\n      "type": "string"\n    }\n  }\n}',
              group_name: "contentstack",
              help: "https://www.contentstack.com/docs/developers/automation-hub-connectors/contentstack-management-entries-actions#publish-an-entry",
              version: 1,
              published: true,
              category: "Entry",
              auth_scope: ["cm.entry:publish"],
              plan_key: "",
              tool_input_schema:
                '{"type":"object","required":["stack_api_key","branch","content_type_name","entry","locales","environments","publish_with_reference","scheduled_at"],"properties":{"stack_api_key":{"title":"Select Stack","description":"Select a stack to publish the entry.","type":"string","default":"","minLength":3,"lookup":{"id":"get_stack_api_keys_v5","authtoken":true}},"branch":{"title":"Select Branch","type":"string","description":"Select a branch from your stack.","default":"{(main||main)}","show":true,"lookup":{"id":"get_branches_v5","deps":["stack_api_key"]},"likeliest_values":{"type":"key","value":["branch.uid"]}},"content_type_name":{"title":"Select Content Type","description":"Select a content type to publish the entry.","type":"string","default":"","minLength":3,"lookup":{"id":"get_content_types_v5","searchable":true,"deps":["stack_api_key"],"optional_deps":["branch"]},"likeliest_values":{"type":"key","value":["content_type.uid"]}},"entry":{"title":"Select Entry","description":"Select an entry to publish.","type":"string","default":"","minLength":3,"lookup":{"id":"get_entries_v5","searchable":true,"deps":["stack_api_key","content_type_name"],"optional_deps":["branch"]},"likeliest_values":{"type":"key","value":["entry.uid"]}},"locales":{"title":"Select Locale(s)","description":"Select the locale(s) in which you want to publish the entry.","type":"string","minLength":3,"lookup":{"id":"get_locales_v5","deps":["stack_api_key"],"optional_deps":["branch"],"searchable":true},"multiSelect":true},"environments":{"title":"Select Environment(s)","description":"Select the environment(s) in which you want to publish the entry.","type":"string","default":"","minLength":3,"lookup":{"id":"get_environments_v4","deps":["stack_api_key"]},"likeliest_values":{"type":"key","value":["environment.uid"]},"multiSelect":true},"publish_with_reference":{"title":"Nested Reference Publishing","type":"boolean","default":true},"scheduled_at":{"title":"Publish Schedule","description":"Schedule the entry publish in ‘YYYY-MM-DD HH:MM:SS’ format.","type":"string"}}}',
              input_data: "{}",
              name: "Publish an Entry",
              connector_title: "Publish an Entry",
              action_title: "Publish an Entry",
              tool_title: "Publish an Entry",
              tool_description:
                "This action publishes a single entry in a stack.",
            },
          },
        ],
        response_type: "json",
        randomness: 0.5,
        user_id: "blt043645b976bcde8f",
        org_id: "blt87b0a3aff3fc7a51",
        created_at: "2025-07-02T06:31:08.449Z",
        updated_at: "2025-07-02T06:45:21.899Z",
        __v: 0,
        auth: "05acc1b033ce4253ae4da0925154ca70",
        model_id: "gemini-2.0-flash",
        provider: "gemini",
        role_setting:
          '<AgentBackground>Role:\nYou are a reusable AI agent designed to create and publish Contentstack entries or assets based on structured input.\n\nPurpose:\nYou serve as a helper/sub-agent that other agents can call to perform the actual creation and publishing of content objects in Contentstack, reducing duplication and simplifying logic in higher-level agents.\n\nContext:\nYou are typically used by orchestration agents (like an HTTP-triggered logger) to offload the responsibility of content creation. Input includes a type (either "entry" or "asset") and associated content. You validate the input, perform the appropriate API operations using Contentstack abilities, and return a structured success or error response.\n\nAbilities Required:\n- Create an Entry\n- Publish an Entry\n- Create an Asset\n- Publish an Asset</AgentBackground>\n\n<AgentInstruction>Trigger:\nThis agent is invoked by another agent that sends a structured input payload.\n\nStep-by-Step Process:\nReceive an input JSON payload with:\ntype: either "entry" or "asset"\ncontent: object containing required fields (e.g., title, timestamp, metadata)\nValidate that the type is either "entry" or "asset".\n\nIf type is "entry":\nUse the Create an Entry ability to create a new entry with the provided content.\nUse the Publish an Entry ability to publish it immediately.\n\nIf type is "asset":\nUse the Create an Asset ability to create a new asset (e.g., using placeholder metadata or dummy file).\nUse the Publish an Asset ability to publish it.\nHandle any errors during creation or publishing and return a clear error message.\n\nRespond with a structured JSON containing:\n- operation status,\n- created object type,\n- Contentstack ID,\n- and a short message.\n\nFail-Safes:\n- If type is missing or invalid, return an error immediately.\n- Wrap creation and publishing in try-catch or error handling logic.\n- Ensure that partial failures are not silently ignored.</AgentInstruction>\n\n<AgentOutputFormatting>Format:\nJSON\n\nStructure:\n\njson\nCopy\nEdit\n{\n  "status": "success" | "error",\n  "type": "entry" | "asset",\n  "contentstack_id": "string",\n  "message": "string"\n}\nStyle Guidelines:\n\nKeep the message field short and actionable.\n\nUse lowercase values for status and type for consistency.\n\nInclude contentstack_id only on success.\n\nExample (Success):\n\njson\nCopy\nEdit\n{\n  "status": "success",\n  "type": "entry",\n  "contentstack_id": "blt123abc456def",\n  "message": "Successfully created and published entry."\n}\nExample (Error):\n\njson\nCopy\nEdit\n{\n  "status": "error",\n  "type": "entry",\n  "message": "Missing required title field in content."\n}</AgentOutputFormatting>',
        input_schema:
          '[{"id":"wfpmojb315i","name":"role","description":"An AI agent that creates and publishes either an Entry or Asset in Contentstack based on input type and payload received from a parent agent.","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]},{"id":"7b6gbvgx3zb","name":"expertise","description":"Contentstack API operations, conditional content creation, publishing workflows, reusable subroutine logic for other agents.","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]},{"id":"krl4n66scgh","name":"contextualKnowledge","description":"This agent acts as a reusable content creation utility. It supports both entries and assets, and automatically publishes the created object. It expects structured input data from other agents that define the object type and metadata.","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]},{"id":"232jvazgzez","name":"objective","description":"To create and publish either an Entry or Asset in Contentstack using structured input.","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]},{"id":"7thm701y4gq","name":"stepByStepProcess","description":"1. Receive input from another agent with fields: type, content, and metadata. 2. If `type` is `entry`:    a. Create a new Entry in Contentstack using provided content.    b. Publish the Entry. 3. If `type` is `asset`:    a. Create a new Asset in Contentstack with metadata or placeholder.    b. Publish the Asset. 4. Return success with ID and object type, or error with details.","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]},{"id":"s34z0b08ur","name":"bestPractices","description":"- Always validate `type` and `content` before creation. - Handle missing or invalid input with clear error messages. - Separate creation and publishing steps for clarity. - Return a structured response with useful IDs.","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]},{"id":"5n5qqdos93p","name":"structure","description":"<response>   <status>success</status>   <type>entry</type>   <contentstack_id>bltxyz123abc</contentstack_id>   <message>Successfully created and published entry.</message> </response>","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]},{"id":"v7xp4lvqmxp","name":"style","description":"Clear, concise, API-consumable. Stick to JSON-compatible values in responses. Avoid unnecessary verbosity.","type":"textarea","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]}]',
        output_schema: {
          type: "visual",
          schema:
            '[{"id":"zzbpcylcjo","name":"status","description":"Indicates whether the operation was successful. Values: \\"success\\" or \\"error\\".","type":"enum","isArray":false,"required":true,"nestedProperties":[],"enumValues":["success","error"]},{"id":"cw91ut914r5","name":"type","description":"The type of object created: either \\"entry\\" or \\"asset\\".","type":"enum","isArray":false,"required":true,"nestedProperties":[],"enumValues":["entry","asset"]},{"id":"mxk9sjh0g9f","name":"contentstack_id","description":"The unique ID of the created object in Contentstack. Present only on success.","type":"string","isArray":false,"required":false,"nestedProperties":[],"enumValues":[]},{"id":"7yqfh6tlkvd","name":"message","description":"\\tA short, human-readable summary of the operation or error.","type":"string","isArray":false,"required":true,"nestedProperties":[],"enumValues":[]}]',
        },
        brandkit: {
          enabled: false,
          knowledge_vault: false,
        },
      },
    },
    {
      id: "1308b1ed854f448e835ce668ec77c2c5",
      title: "Create a Taxonomy",
      type: "action",
      configured_action: {
        id: "1308b1ed854f448e835ce668ec77c2c5",
        origin_id: "1308b1ed854f448e835ce668ec77c2c5",
        title: "Create a Taxonomy",
        description: "This action creates a new taxonomy in a stack.",
        type: "action",
        auth: "cd25eb9fe1f146d586d6832bdad24c07",
        connector_id: "9230134456674e95a4d569aaeebf72de",
        input_schema:
          '{\n  "type": "object",\n  "required": [\n    "stack_api_key",\n    "uid",\n    "name"\n  ],\n  "properties": {\n    "stack_api_key": {\n      "title": "Select Stack",\n      "type": "string",\n      "description": "Select a stack to create a new taxonomy.",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_stack_api_keys_v5",\n        "authtoken": true\n      }\n    },\n    "uid": {\n      "title": "Taxonomy UID",\n      "description": "Specify a UID to create a taxonomy.",\n      "type": "string",\n      "minLength": 3\n    },\n    "name": {\n      "title": "Taxonomy Title",\n      "description": "Specify a title for the taxonomy.",\n      "type": "string",\n      "minLength": 3\n    },\n    "description": {\n      "title": "Taxonomy Description",\n      "description": "Specify a description for the taxonomy.",\n      "type": "string",\n      "format": "textarea"\n    }\n  }\n}',
      group_name: "contentstack",
        help: "https://www.contentstack.com/docs/developers/automation-hub-connectors/contentstack-management-taxonomy-actions#create-a-taxonomy",
        version: 1,
        published: true,
        category: "Taxonomy",
        auth_scope: ["cm.taxonomies.management:write"],
        plan_key: "",
        tool_input_schema:
          '{"type":"object","required":["stack_api_key","uid","name","description"],"properties":{"stack_api_key":{"title":"Select Stack","type":"string","description":"Select a stack to create a new taxonomy.","default":"","minLength":3,"lookup":{"id":"get_stack_api_keys_v5","authtoken":true}},"uid":{"title":"Taxonomy UID","description":"Specify a UID to create a taxonomy.","type":"string","minLength":3},"name":{"title":"Taxonomy Title","description":"Specify a title for the taxonomy.","type":"string","minLength":3},"description":{"title":"Taxonomy Description","description":"Specify a description for the taxonomy.","type":"string","format":"textarea"}}}',
        input_data: "{}",
        name: "Create a Taxonomy",
        connector_title: "Create a Taxonomy",
        action_title: "Create a Taxonomy",
        tool_title: "Create a Taxonomy",
        tool_description: "This action creates a new taxonomy in a stack.",
      },
    },
    {
      id: "3a6a3b9c65d74834a6408976cc67e14d",
      title: "Create a Term",
      type: "action",
      configured_action: {
        id: "3a6a3b9c65d74834a6408976cc67e14d",
        origin_id: "3a6a3b9c65d74834a6408976cc67e14d",
        title: "Create a Term",
        description: "This action creates a new term within a taxonomy.",
        type: "action",
        auth: "cd25eb9fe1f146d586d6832bdad24c07",
        connector_id: "9230134456674e95a4d569aaeebf72de",
        input_schema:
          '{\n  "type": "object",\n  "required": [\n    "stack_api_key",\n    "taxonomy_uid",\n    "uid",\n    "name",\n    "order"\n  ],\n  "properties": {\n    "stack_api_key": {\n      "title": "Select Stack",\n      "type": "string",\n      "description": "Select a stack to create a new term.",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_stack_api_keys_v5",\n        "authtoken": true\n      }\n    },\n    "taxonomy_uid": {\n      "title": "Select Taxonomy",\n      "type": "string",\n      "description": "Select a taxonomy to create a term.",\n      "lookup": {\n        "id": "get_taxonomies",\n        "deps": [\n          "stack_api_key"\n        ],\n        "searchable": true\n      }\n    },\n    "uid": {\n      "title": "Term UID",\n      "description": "Specify a UID to create a term.",\n      "type": "string",\n      "minLength": 3\n    },\n    "name": {\n      "title": "Term Title",\n      "description": "Specify a title for the term. It must contain only alphanumeric values and underscores.",\n      "type": "string",\n      "minLength": 3\n    },\n    "order": {\n      "title": "Term Order",\n      "description": "Specify the placement order of your term.",\n      "type": "number"\n    },\n    "parent_uid": {\n      "show": true,\n      "title": "Select Parent Term",\n      "description": "Select the parent to create a term.",\n      "type": "string",\n      "lookup": {\n        "id": "get_terms",\n        "deps": [\n          "stack_api_key",\n          "taxonomy_uid"\n        ],\n        "searchable": true\n      }\n    }\n  }\n}',
        group_name: "contentstack",
        help: "https://www.contentstack.com/docs/developers/automation-hub-connectors/contentstack-management-taxonomy-actions#create-a-term",
        version: 1,
        published: true,
        category: "Taxonomy",
        auth_scope: ["cm.taxonomy.terms:write"],
        plan_key: "",
        tool_input_schema:
          '{"type":"object","required":["stack_api_key","taxonomy_uid","uid","name","order","parent_uid"],"properties":{"stack_api_key":{"title":"Select Stack","type":"string","description":"Select a stack to create a new term.","default":"","minLength":3,"lookup":{"id":"get_stack_api_keys_v5","authtoken":true}},"taxonomy_uid":{"title":"Select Taxonomy","type":"string","description":"Select a taxonomy to create a term.","lookup":{"id":"get_taxonomies","deps":["stack_api_key"],"searchable":true}},"uid":{"title":"Term UID","description":"Specify a UID to create a term.","type":"string","minLength":3},"name":{"title":"Term Title","description":"Specify a title for the term. It must contain only alphanumeric values and underscores.","type":"string","minLength":3},"order":{"title":"Term Order","description":"Specify the placement order of your term.","type":"number"},"parent_uid":{"show":true,"title":"Select Parent Term","description":"Select the parent to create a term.","type":"string","lookup":{"id":"get_terms","deps":["stack_api_key","taxonomy_uid"],"searchable":true}}}}',
        input_data: "{}",
        name: "Create a Term",
        connector_title: "Create a Term",
        action_title: "Create a Term",
        tool_title: "Create a Term",
        tool_description: "This action creates a new term within a taxonomy.",
      },
    },
    {
      id: "f8145e732f074f77817711d3d66bc334",
      title: "Get All Taxonomies",
      type: "action",
      configured_action: {
        id: "f8145e732f074f77817711d3d66bc334",
        origin_id: "f8145e732f074f77817711d3d66bc334",
        title: "Get All Taxonomies",
        description:
          "This action fetches the details of all the taxonomies in a stack.",
        type: "action",
        auth: "cd25eb9fe1f146d586d6832bdad24c07",
        connector_id: "9230134456674e95a4d569aaeebf72de",
        input_schema:
          '{\n  "type": "object",\n  "required": [\n    "stack_api_key"\n  ],\n  "properties": {\n    "stack_api_key": {\n      "title": "Select Stack",\n      "type": "string",\n      "description": "Select a stack to fetch the details of all the taxonomies.",\n      "default": "",\n      "minLength": 3,\n      "lookup": {\n        "id": "get_stack_api_keys_v5",\n        "authtoken": true\n      }\n    },\n    "limit": {\n      "title": "Taxonomy Limit",\n      "type": "string",\n      "description": "Specify the number of taxonomies to retrieve from the stack. For example, if you set the limit to 10, then the first 10 taxonomies will be fetched. The maximum limit is 100."\n    },\n    "skip": {\n      "title": "Skip Taxonomy (Pagination)",\n      "type": "string",\n      "description": "Specify the number of taxonomies to skip. For example, if you set the skip value to 3, the first three taxonomies will be skipped and the results will start with the fourth item."\n    },\n    "typeahead": {\n      "title": "Search Taxonomy",\n      "type": "string",\n      "description": "Specify a UID or name to search the taxonomies."\n    },\n    "query": {\n      "title": "Select Taxonomies",\n      "type": "string",\n      "description": "Select the taxonomies to fetch their details.",\n      "multiSelect": true,\n      "lookup": {\n        "id": "get_taxonomies",\n        "searchable": true,\n        "deps": [\n          "stack_api_key"\n        ]\n      }\n    },\n    "include_count": {\n      "title": "Include count (total number of taxonomies)",\n      "type": "boolean",\n      "default": false\n    },\n    "include_terms_count": {\n      "title": "Include term count (total number of terms in the selected taxonomies)",\n      "type": "boolean",\n      "default": false\n    },\n    "include_referenced_terms_count": {\n      "title": "Include referenced term count (total number of terms referenced in the entries)",\n      "type": "boolean",\n      "default": false\n    },\n    "include_referenced_entries_count": {\n      "title": "Include referenced entries count (total number of entries which contain references to the terms of all the taxonomies)",\n      "type": "boolean",\n      "default": false\n    },\n    "deleted": {\n      "title": "Get deleted taxonomies (include count displays the total number of deleted taxonomies)",\n      "type": "boolean",\n      "default": false\n    }\n  }\n}',
        group_name: "contentstack",
        help: "https://www.contentstack.com/docs/developers/automation-hub-connectors/contentstack-management-taxonomy-actions#get-all-taxonomies",
        version: 1,
        published: true,
        category: "Taxonomy",
        auth_scope: ["cm.taxonomies.management:read"],
        plan_key: "",
        tool_input_schema:
          '{"type":"object","required":["stack_api_key","limit","skip","typeahead","query","include_count","include_terms_count","include_referenced_terms_count","include_referenced_entries_count","deleted"],"properties":{"stack_api_key":{"title":"Select Stack","type":"string","description":"Select a stack to fetch the details of all the taxonomies.","default":"","minLength":3,"lookup":{"id":"get_stack_api_keys_v5","authtoken":true}},"limit":{"title":"Taxonomy Limit","type":"string","description":"Specify the number of taxonomies to retrieve from the stack. For example, if you set the limit to 10, then the first 10 taxonomies will be fetched. The maximum limit is 100."},"skip":{"title":"Skip Taxonomy (Pagination)","type":"string","description":"Specify the number of taxonomies to skip. For example, if you set the skip value to 3, the first three taxonomies will be skipped and the results will start with the fourth item."},"typeahead":{"title":"Search Taxonomy","type":"string","description":"Specify a UID or name to search the taxonomies."},"query":{"title":"Select Taxonomies","type":"string","description":"Select the taxonomies to fetch their details.","multiSelect":true,"lookup":{"id":"get_taxonomies","searchable":true,"deps":["stack_api_key"]}},"include_count":{"title":"Include count (total number of taxonomies)","type":"boolean","default":false},"include_terms_count":{"title":"Include term count (total number of terms in the selected taxonomies)","type":"boolean","default":false},"include_referenced_terms_count":{"title":"Include referenced term count (total number of terms referenced in the entries)","type":"boolean","default":false},"include_referenced_entries_count":{"title":"Include referenced entries count (total number of entries which contain references to the terms of all the taxonomies)","type":"boolean","default":false},"deleted":{"title":"Get deleted taxonomies (include count displays the total number of deleted taxonomies)","type":"boolean","default":false}}}',
        input_data: "{}",
        name: "Get All Taxonomies",
        connector_title: "Get All Taxonomies",
        action_title: "Get All Taxonomies",
        tool_title: "Get All Taxonomies",
        tool_description:
          "This action fetches the details of all the taxonomies in a stack.",
      },
    },
  ],
  auth: "acf809afbb5841bbb79f6ba9406d3139",
  response_type: "json",
  randomness: 0.6,
  user_id: "blt043645b976bcde8f",
  org_id: "blt87b0a3aff3fc7a51",
  created_at: "2025-06-12T06:14:06.365Z",
  updated_at: "2025-07-02T08:28:01.023Z",
  __v: 0,
  model_id: "gemini-2.0-flash",
  provider: "gemini",
  role_setting:
    '<AgentBackground>Role:\nAn AI agent triggered by an HTTP request, responsible for logging the event via a sub-agent and tagging it with the appropriate term from a taxonomy.\n\nPurpose:\nTo support structured classification of logs in Contentstack using taxonomy and term management alongside content creation.\n\nContext:\nWorks with a sub-agent to log data. Uses taxonomy and term management to ensure every log is categorized for better filtering. Operates fully through query-driven HTTP input.\n\nAbilities Used:\nGet All Taxonomies\nCreate a Taxonomy\nCreate a Term</AgentBackground>\n\n<AgentInstruction>Steps:\nWait for HTTP request trigger.\nParse query parameters (e.g., notify=true, event=ping|error|custom)\nDetermine the event type (event param or fallback to "uncategorized")\nCall Get All Taxonomies to check if Event Type taxonomy exists.\nIf not found, call Create a Taxonomy to create one titled Event Type.\nThen call Create a Term under Event Type with the event value (e.g., ping, notify).\n\nBuild payload:\ntype: entry or asset (based on notify)\ncontent: metadata, query string, and term_id\nCall sub-agent: Contentstack Object Creator\nReturn final structured response.</AgentInstruction>\n\n<AgentOutputFormatting>Format:\nJSON\n\nStructure:\n\njson\nCopy\nEdit\n{\n  "status": "success" | "error",\n  "log_type": "entry" | "asset",\n  "contentstack_id": "string",\n  "term_id": "string",\n  "message": "string"\n}\nExample Success:\n\njson\nCopy\nEdit\n{\n  "status": "success",\n  "log_type": "entry",\n  "contentstack_id": "blt456xyz789abc",\n  "term_id": "trm789abc456def",\n  "message": "Log created and categorized under term \'ping\'."\n}\nExample Error:\n\njson\nCopy\nEdit\n{\n  "status": "error",\n  "message": "Failed to create taxonomy or term."\n}</AgentOutputFormatting>',
  input_schema: [
    {
      id: "16ebtcjlq2nj",
      name: "role",
      description:
        "A concise summary of the AI agent’s identity and core specialization.",
      type: "textarea",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "5j3ds4nnc5",
      name: "expertise",
      description:
        "Key areas of proficiency relevant to prompt design and AI optimization.",
      type: "textarea",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "ze5qpcvsvq",
      name: "contextualKnowledge",
      description:
        "Relevant background or contextual information the agent should know to perform optimally.",
      type: "textarea",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "acd5tb3k9bc",
      name: "objective",
      description: "A concise statement of the agent's primary goal.",
      type: "string",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "qij6vny06to",
      name: "stepByStepProcess",
      description:
        "Sequential steps the agent must follow during prompt analysis and enhancement.",
      type: "textarea",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "mf5nxenritn",
      name: "bestPractices",
      description:
        "A list of prompt design principles the agent should follow.",
      type: "textarea",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "8nagn9fxiz3",
      name: "structure",
      description: "Specific XML tag layout or formatting structure to follow.",
      type: "textarea",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "dwtaejqmo3w",
      name: "style",
      description:
        "Formatting and language guidelines for clarity, tone, and readability.",
      type: "textarea",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "8ro3arkj5cl",
      name: "tone",
      description:
        "Desired tone of voice for the agent’s response (e.g., formal, instructional, friendly).",
      type: "select",
      isArray: false,
      required: true,
      nestedProperties: [],
      enumValues: [
        "formal",
        "professional",
        "neutral",
        "friendly",
        "instructional",
      ],
    },
    {
      id: "v1qoqg16dvc",
      name: "includeExamples",
      description: "Whether to show examples in the optimized prompt",
      type: "boolean",
      isArray: false,
      required: false,
      nestedProperties: [],
      enumValues: [],
    },
    {
      id: "1gjrztegf9s",
      name: "enableChainOfThought",
      description: "Whether to encourage step-by-step reasoning",
      type: "boolean",
      isArray: false,
      required: false,
      nestedProperties: [],
      enumValues: [],
    },
  ],

  brandkit: {
    enabled: false,
    knowledge_vault: false,
  },
  provider_options: [
    {
      label: "OpenAI",
      value: "chatgpt",
    },
    {
      label: "Vertex AI",
      value: "vertex",
    },
    {
      label: "Azure OpenAI",
      value: "azurechatgpt",
    },
    {
      label: "Google Gemini",
      value: "gemini",
    },
    {
      label: "Anthropic Claude",
      value: "anthropic",
    },
  ],
  response_types: [
    {
      label: "JSON",
      value: "json",
    },
    {
      label: "Text",
      value: "text",
    },
    {
      label: "HTML",
      value: "html",
    },
    {
      label: "Markdown",
      value: "markdown",
    },
  ],
  model_options: {
    chatgpt: [
      {
        label: "gpt-4-turbo",
        value: "gpt-4-turbo",
      },
      {
        label: "gpt-4o",
        value: "gpt-4o",
      },
      {
        label: "gpt-4o-mini",
        value: "gpt-4o-mini",
      },
      {
        label: "o3-mini",
        value: "o3-mini",
      },
    ],
    vertex: [
      {
        label: "gemini-1.5-flash",
        value: "gemini-1.5-flash",
      },
      {
        label: "gemini-1.5-pro",
        value: "gemini-1.5-pro",
      },
      {
        label: "gemini-2.0-flash",
        value: "gemini-2.0-flash",
      },
      {
        label: "gemini-2.0-pro-exp-02-05",
        value: "gemini-2.0-pro-exp-02-05",
      },
      {
        label: "gemini-2.0-flash-thinking-exp-01-21",
        value: "gemini-2.0-flash-thinking-exp-01-21",
      },
    ],
    azurechatgpt: [
      {
        label: "MODEL IS CONFIGURED IN AZURE",
        value: "MODEL IS CONFIGURED IN AZURE",
      },
    ],
    gemini: [
      {
        label: "gemini-1.5-flash",
        value: "gemini-1.5-flash",
      },
      {
        label: "gemini-1.5-pro",
        value: "gemini-1.5-pro",
      },
      {
        label: "gemini-2.0-flash",
        value: "gemini-2.0-flash",
      },
      {
        label: "gemini-2.0-pro-exp-02-05",
        value: "gemini-2.0-pro-exp-02-05",
      },
      {
        label: "gemini-2.0-flash-thinking-exp-01-21",
        value: "gemini-2.0-flash-thinking-exp-01-21",
      },
    ],
    anthropic: [
      {
        label: "claude-3-5-sonnet-latest",
        value: "claude-3-5-sonnet-latest",
      },
      {
        label: "claude-3-5-haiku-latest",
        value: "claude-3-5-haiku-latest",
      },
      {
        label: "claude-3-opus-latest",
        value: "claude-3-opus-latest",
      },
    ],
  },
  auth_options: [
    {
      id: "cd25eb9fe1f146d586d6832bdad24c07",
      title: "Contentstack OAuth #1",
      group_name: "contentstack",
    },
    {
      id: "05acc1b033ce4253ae4da0925154ca70",
      title: "Gemini #1",
      group_name: "gemini",
    },
    {
      id: "acf809afbb5841bbb79f6ba9406d3139",
      title: "Gemini #2",
      group_name: "gemini",
    },
    {
      id: "1979b72abefe4eaea349069653089906",
      title: "Gemini #3",
      group_name: "gemini",
    },
  ],
};
